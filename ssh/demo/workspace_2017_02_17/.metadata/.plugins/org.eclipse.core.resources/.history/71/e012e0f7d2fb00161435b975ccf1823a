<!DOCTYPE validators PUBLIC
        "-//Apache Struts//XWork Validator 1.0.2//EN"
        "http://struts.apache.org/dtds/xwork-validator-1.0.2.dtd">

<validators>
	<field name="age">
		<field-validator type="int">
			<param name="min">20</param>
			<param name="max">50</param>
			<message>The age should between ${min} and ${max}</message>
		</field-validator>
	</field>
	<!-- Plain Validator Syntax -->
	<validators>
		<validator type="email">
			<param name="fieldName">myEmail</param>
			<message>Must provide a valid email</message>
		</validator>
	</validators>

	<!-- Field Validator Syntax -->
	<field name="myEmail">
		<field-validator type="email">
			<message>Must provide a valid email</message>
		</field-validator>
	</field>

	<!-- Field Validator Syntax with expressions -->
	<!-- Only available when used with xml based configuration, if you want 
		to have the same flexibility with annotations use @RegexFieldValidator instead -->
	<field name="myEmail">
		<field-validator type="email">
			<param name="regexExpression">${emailPattern}</param> <!-- will be evaluated as: String getEmailPattern() -->
			<param name="caseSensitiveExpression">${emailCaseSensitive}</param> <!-- will be evaluated as: boolean getEmailCaseSensitive() -->
			<param name="trimExpression">${trimEmail}</param> <!-- will be evaluated as: boolean getTrimEmail() -->
			<message>Must provide a valid email</message>
		</field-validator>
	</field>
</validators>
